name: daily

on:
  schedule:
    - cron: '3 0 * * *'
  push:
    paths: '**/daily.yml'

jobs:
  download:
    runs-on: ubuntu-latest

    steps:
      - name: define variables
        run: |
          echo "::set-env name=SYMBOL::XBTUSD"
          echo "::set-env name=DATE::$(date -d "yesterday 13:00" '+%Y-%m-%d')"
        shell: bash
        
      - name: checkout
        uses: actions/checkout@v2.0.0
        
      - name: download xbtusd
        run: |
          npm install
          node download.js ${SYMBOL} -s ${DATE} -o ${SYMBOL}.trades.${DATE}.db

      - name: create release if not exists
        id: create_release
        uses: jiachengpan/create-release@check_exists

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1.0.1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ${{env.SYMBOL}}.trades.${{env.DATE}}.db
          asset_name: ${{env.SYMBOL}}.trades.${{env.DATE}}.db
